services:
  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    # ensures data is persisted across container restarts
    environment:
      MONGO_INITDB_DATABASE: scisubmit
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: secret

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /usr/src/app/node_modules
    env_file:
      - ./backend/.env.dev #Inject .env.dev dynamically
    depends_on:
      - mongo

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5174:8080"
      - "9000:9000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      #- ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    env_file:
      - ./frontend/.env.dev  # Inject .env.dev dynamically
    depends_on:
      - backend

# Database seeding using
  seeder:
    build:
      context: ./backend
      dockerfile: Dockerfile
    entrypoint: [ "npx", "ts-node", "src/seed.ts" ]
    depends_on:
      - mongo
    env_file:
      - ./backend/.env.dev

volumes:
  mongo_data:
